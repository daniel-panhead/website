---
import { Image } from "astro:assets";
import ProjectCard from "./ProjectCard.vue"

import cat from "../assets/cat.png";
import { projects } from "../data/projects";

interface Props {
  maxProjects?: number
}

const { maxProjects} = Astro.props;
---

<div class="projects-content">
  <div class="projects-cards">
    {projects.slice(0, maxProjects ?? projects.length).map((project) => (
      <ProjectCard
        client:only
        title={project.title} 
        tagline={project.tagline}
        link={project.link}
      >
        {project.img &&
          <Image src={project.img} alt={project.title} slot="img" style={{width: "100%", height: "100%", "flex-grow": "0"}} />
        }
        {!project.img &&
          <div class="placeholder_image" slot="img"></div>
        }
        <span>{project.description}</span>
      </ProjectCard>
    ))}
  </div>
  {maxProjects && maxProjects < projects.length && 
    <a href="/projects" class="btn bg-primary">
        <Image src={cat} alt="Cat" />
        <span>
          See more projects
          <svg
            width="12"
            height="6"
            viewBox="0 0 12 6"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10.6666 3H1.33325M10.6666 3L7.99992 5M10.6666 3L7.99992 1"
              stroke="black"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
        </span>
    </a>
  }
</div>

<style>
  .projects-content {
		width: 100%;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 32px;
	}

	.projects-cards {
		width: 100%;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 32px;
		@media (min-width: 768px) {
			flex-direction: row;
			gap: 32px;
      flex-wrap: wrap;
		}
	}

	.placeholder_image {
    width: 240px;
    height: 155px;
    background: gray;
  }
</style>